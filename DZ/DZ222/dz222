# Задание 1
# Создайте класс Circle (окружность). Для данного
# класса реализуйте ряд перегруженных операторов:
#  ■ Проверка на равенство радиусов двух окружностей
# (операция = =);
#  ■ Сравнения длин двух окружностей (операции >, <,
# <=,>=);
#  ■ Пропорциональное изменение размеров окружности,
# путем изменения ее радиуса (операции + - += -=).

import math

class Circle:

    def __init__(self, radius):
        self.radius = radius
        self.last_func = None

    def __add__(self, other):
        return Circle(self.radius + other)

    def __sub__(self, other):
        return Circle(self.radius - other)

    def __iadd__(self, other):
        self.radius += other
        return self.radius

    def __isub__(self, other):
        self.radius -= other
        return self.radius

    def __eq__(self, other):
        return self.radius == other

    def __lt__(self, other):
        return self.circ_len(self.radius) < self.circ_len(other)

    def __gt__(self, other):
        return self.circ_len(self.radius) > self.circ_len(other)

    def __le__(self, other):
        return self.circ_len(self.radius) <= self.circ_len(other)

    def __ge__(self, other):
        return self.circ_len(self.radius) >= self.circ_len(other)

    def circ_len(self, r):
        return round((math.pi * 2 * r), 2)

    def __str__(self):
        if self.last_func:
            return f"{self.radius} " \
                   f"{self.last_func['operator']} " \
                   f"{self.last_func['right']} = " \
                   f"{self.radius + self.last_func['right'].radius}"
        return f'{self.radius}'


a = Circle(8)
b = 5
print(a + b)
print(a - b)
print(a < b)
print(a <= b)
print(a == b)
print(a > b)
print(a >= b)
a += 1
print(a)
a -= 1
print(a)

# Задание 2
# Создайте класс Complex (комплексное число). Более
# подробно ознакомиться с комплексными числами можно
# по ссылке.
# Создайте перегруженные операторы для реализации
# арифметических операций для по работе с комплексными
# числами (операции +, -, *, /).

# class Complex:
#
#     def __init__(self):

# Задание 3
# Вам необходимо создать класс Airplane (самолет).
# С помощью перегрузки операторов реализовать:
# Домашнее задание
# 1 ■ Проверка на равенство типов самолетов (операция
# = =);
#  ■ Увеличение и уменьшение пассажиров в салоне са-
# молета (операции +  - +=  -=);
#  ■ Сравнение двух самолетов по максимально возмож-
# ному количеству пассажиров на борту (операции >
# <  <=  >=).

# Задание 4
# Создать класс Flat (квартира). Реализовать перегру-
# женные операторы:
#  ■ Проверка на равенство площадей квартир (операция
# ==);
#  ■ Проверка на неравенство площадей квартир (опера-
# ция !=);
#  ■ Сравнение двух квартир по цене (операции >  <  <= >=).