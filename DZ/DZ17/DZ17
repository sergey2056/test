
class groundTransportation:
    def __init__(self, model_name: str, motor_power: int, color: str, max_speed: int):
        self.model_name = model_name
        self.motor_power = motor_power
        self.color = color
        self.max_speed = max_speed


    def print_data(self):
        print(f'\n    Название модели: {self.model_name}\n'
              f'    Мощьность мотора: {self.motor_power} л.с.\n'
              f'    Цвет: {self.color}\n'
              f'    Максимальная скорость: {self.max_speed} км/ч')


class wheeledTransport(groundTransportation):
    def __init__(self, model_name, motor_power, color, max_speed, clearance: int, wheel_radius: int):
        super().__init__(model_name, motor_power, color, max_speed)
        self.clearance = clearance
        self.wheel_radius = wheel_radius


    def print_data(self):
        print('\nКолесный транспорт: ')
        groundTransportation.print_data(self)
        print(f'    Клиренс: {self.clearance} мм\n'
              f'    Радиус колес: {self.wheel_radius} мм\n')



class trackedVehicles(groundTransportation):
    def __init__(self, model_name, motor_power, color, max_speed, track: int):
        super().__init__(model_name, motor_power, color, max_speed)
        self.track = track


    def print_data(self):
        print('\nГусеничный транспорт: ')
        groundTransportation.print_data(self)
        print(f'    Максимальная скорость: {self.max_speed} км/ч\n'
              f'    Ширина гусеницы: {self.track} мм\n')


class airCushionTransport(groundTransportation):
    def __init__(self, model_name, motor_power, color, max_speed, pillow_height: int):
        super().__init__(model_name, motor_power, color, max_speed)
        self.pillow_height = pillow_height


    def print_data(self):
        print('\nTранспорт на воздушных подушках: ')
        groundTransportation.print_data(self)
        print(f'    Максимальная скорость: {self.max_speed} км/ч\n'
              f'    Высота воздушной подушки: {self.pillow_height} мм\n')




w_tr = wheeledTransport('reno logan', 150, 'green', 180, 150, 15)

w_tr.print_data()

t_v = trackedVehicles('T-150', 170, 'read', 60, 300)

t_v.print_data()

air_tr = airCushionTransport('Нептун 23GR', 150, 'black', 80, 300)

air_tr.print_data()